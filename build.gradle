buildscript {
   dependencies {
      classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10")
   }
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.6'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}

apply plugin: "com.ewerk.gradle.plugins.querydsl" 


group = 'com.hero'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.oracle.database.security:oraclepki'
	implementation 'com.oracle.database.security:osdt_core'
	implementation 'com.oracle.database.security:osdt_cert'
	// 서버 재실행 없이 코드 적용시켜줌
	// Gradle의 developmentOnly는 개발환경에만 적용되는 설정이다. 
	// 즉, 운영환경에 배포되는 jar, war 파일에는 developmentOnly로 설치된 라이브러리는 제외된다.
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.jsoup:jsoup:1.14.2'
	
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'
	
}

tasks.named('test') {
	useJUnitPlatform()
}
//querydsl 추가 
def querydslDir = 'src/main/generated' 
//def querydslDir = "$buildDir/generated/querydsl" 
querydsl { 
	library = "com.querydsl:querydsl-apt" 
	jpa = true 
	querydslSourcesDir = querydslDir 
} 

sourceSets { 
	main { 
		java { 
			srcDirs = ['src/main/java', querydslDir] 
		} 
	} 
}

compileQuerydsl{ 
	options.annotationProcessorPath = configurations.querydsl 
}
 
configurations {
	querydsl.extendsFrom compileClasspath 
} 







